(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{194:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),s=n(7),o=(n(0),n(365)),r=n(368),c=n(369),l={title:"Change object statuses in batch",slug:"/api/change-object-status-in-batch",hidden:!1,createdAt:"2020-03-02T07:47:33.337Z",updatedAt:"2020-10-13T07:32:19.661Z"},i={unversionedId:"REST API/api-objects/api-change-object-status-in-batch",id:"REST API/api-objects/api-change-object-status-in-batch",isDocsHomePage:!1,title:"Change object statuses in batch",description:"This API call allows changing the status for multiple objects in multiple events, in one transaction. Meaning: either all status changes get applied, or none.",source:"@site/docs/REST API/api-objects/api-change-object-status-in-batch.md",slug:"/api/change-object-status-in-batch",permalink:"/docs/api/change-object-status-in-batch",version:"current",sidebar:"api",previous:{title:"For sale / not for sale",permalink:"/docs/api/for-sale-not-for-sale"},next:{title:"List all charts",permalink:"/docs/api/list-all-charts"}},b=[{value:"Request",id:"request",children:[]},{value:"Response",id:"response",children:[]}],u={toc:b};function p(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This API call allows changing the status for multiple objects in multiple events, in one transaction. Meaning: either all status changes get applied, or none."),Object(o.b)("p",null,"This is different from changing the object status in a season, in the sense that not all events need to be linked to the same chart. The events can be completely independent."),Object(o.b)("p",null,"A good use case is a shopping basket, in which you allow your customers to select tickets for many events. Or a tool that allows swapping seats (i.e.: releasing some seats, and booking other seats)."),Object(o.b)(r.a,{groupId:"serverside-code-samples",defaultValue:"shell",values:[{label:"Text",value:"shell"},{label:"PHP",value:"php"},{label:"C#",value:"csharp"},{label:"Java",value:"java"},{label:"Python",value:"python"},{label:"Ruby",value:"ruby"},{label:"Javascript",value:"javascript"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"shell",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"POST https://api-{region}.seatsio.net/events/actions/change-object-status\n\nPOST https://api-{region}.seatsio.net/events/actions/change-object-status?expand=objects\n\n"))),Object(o.b)(c.a,{value:"php",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-php"},'// Booking seats\n$seatsioClient->events->changeObjectStatusInBatch([\n    new StatusChangeRequest("event1", ["A-3", "A-5"], "booked"),\n    new StatusChangeRequest("event2", ["B-27"], "booked"),\n);\n\n// Holding seats\n$seatsioClient->events->changeObjectStatusInBatch([\n    new StatusChangeRequest("event1", ["A-3", "A-5"], "reservedByToken", "wvXbB9MlHt"),\n    new StatusChangeRequest("event2", ["B-27"], "reservedByToken", "wvXbB9MlHt"),\n);\n'))),Object(o.b)(c.a,{value:"csharp",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-csharp"},'// Booking seats\nClient.Events.ChangeObjectStatus(new[] {\n    new StatusChangeRequest("event1", new[] {"A-3", "A-5"}, "booked"),\n    new StatusChangeRequest("event2", new[] {"B-27"}, "booked"),\n});\n\n// Holding seats\nClient.Events.ChangeObjectStatus(new[] {\n    new StatusChangeRequest("event1", new[] {"A-3", "A-5"}, "reservedByToken", "wvXbB9MlHt"),\n    new StatusChangeRequest("event2", new[] {"B-27"}, "reservedByToken", "wvXbB9MlHt"),\n});\n'))),Object(o.b)(c.a,{value:"java",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'// Booking seats\nclient.events.changeObjectStatus(newArrayList(\n    new StatusChangeRequest("event1", newArrayList("A-3", "A-5"), "booked"),\n    new StatusChangeRequest("event2", newArrayList("B-27"), "booked"),\n));\n\n// Holding seats\nclient.events.changeObjectStatus(newArrayList(\n    new StatusChangeRequest("event1", newArrayList("A-3", "A-5"), "reservedByToken", "wvXbB9MlHt"),\n    new StatusChangeRequest("event2", newArrayList("B-27"), "reservedByToken", "wvXbB9MlHt"),\n));\n'))),Object(o.b)(c.a,{value:"python",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},'# Booking seats\nclient.events.change_object_status_in_batch([\n  StatusChangeRequest("event1", ["A-3", "A-5"], "booked"),\n  StatusChangeRequest("event2", ["B-27"], "booked")\n])\n\n# Holding seats\nclient.events.change_object_status_in_batch([\n  StatusChangeRequest("event1", ["A-3", "A-5"], "reservedByToken", "wvXbB9MlHt"),\n  StatusChangeRequest("event2", ["B-27"], "reservedByToken", "wvXbB9MlHt")\n])\n\n'))),Object(o.b)(c.a,{value:"ruby",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ruby"},"# Booking seats\nclient.events.change_object_status_in_batch([\n    { :event => 'event1', :objects => ['A-3', 'A-5'], :status => 'booked'},\n  { :event => 'event2', :objects => ['B-27'], :status => 'booked'}\n])\n\n# Holding seats\nclient.events.change_object_status_in_batch([\n    { :event => 'event1', :objects => ['A-3', 'A-5'], :status => 'reservedByToken', :holdToken => 'wvXbB9MlHt'},\n  { :event => 'event2', :objects => ['B-27'], :status => 'reservedByToken', :holdToken => 'wvXbB9MlHt'}\n])\n\n"))),Object(o.b)(c.a,{value:"javascript",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"// Booking seats\nclient.events.changeObjectStatus([\n    new StatusChangeRequest('event1', ['A-3', 'A-5'], 'booked'),\n    new StatusChangeRequest('event2', ['B-27'], 'booked'),\n]);\n\n// Holding seats\nclient.events.changeObjectStatus([\n    new StatusChangeRequest('event1', ['A-3', 'A-5'], 'reservedByToken', 'wvXbB9MlHt'),\n    new StatusChangeRequest('event2', ['B-27'], 'reservedByToken', 'wvXbB9MlHt'),\n]);\n")))),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},'All seats (or tables, booths or GA places) passed in to this API will be considered as "used seats" for ',Object(o.b)("a",{parentName:"p",href:"https://www.seats.io/pricing"},"pricing purposes"),"."))),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"This API call only supports events that belong to the same workspace. It's not possible to book objects in events across workspaces. To do so, you'll need to make multiple calls."))),Object(o.b)("h2",{id:"request"},"Request"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"// Booking seats\n{\n  statusChanges: [\n    { event: 'event1', objects: ['A-3', 'A-5'], status: 'booked' },\n    { event: 'event2', objects: ['B-27'], status: 'booked' }\n  ]\n}\n\n// Holding seats\n{\n  statusChanges: [\n    { \n      event: 'event1', \n      objects: ['A-3', 'A-5'], \n      status: 'reservedByToken',\n      holdToken: 'wvXbB9MlHt'\n    },\n    ...\n  ]\n}\n")),Object(o.b)("p",null,"The request is a JSON object with one property: ",Object(o.b)("inlineCode",{parentName:"p"},"statusChanges"),". This is an array of JSON objects, with the following properties:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"event"),": the event key"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"objects"),": an array of object IDs"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"status"),": the status you want to assign to an object"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"holdToken")," ",Object(o.b)("em",{parentName:"li"},"(optional)"),": the hold token must be supplied when you hold a seat (status ",Object(o.b)("inlineCode",{parentName:"li"},"reservedByToken"),"), or want to make sure that the same person that made the hold confirms his booking."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"keepExtraData")," ",Object(o.b)("em",{parentName:"li"},"(optional)"),": boolean. If set to true, the existing extra data doesn't get cleared"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"orderId")," ",Object(o.b)("em",{parentName:"li"},"(optional)"),": an order id, defined by yourself, to be able to retrieve the objects IDs per order later on."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"channelKeys")," ",Object(o.b)("i",null,"(optional)"),": an array of strings, i.e. the channel keys of the channel(s) to which the objects belong. If omitted, and the objects are assigned to a channel, the request will fail with 400 Bad request. Pass in ",Object(o.b)("inlineCode",{parentName:"li"},"NO_CHANNEL")," as channel key to allow objects without a channel."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"ignoreChannels")," ",Object(o.b)("i",null,"(optional)"),": if true, the status change call succeeds, even if the objects belong to a channel. Useful inside a back office application, in which the user is allowed to book any seat - no matter the channel.\nShould not be used in combination with ",Object(o.b)("inlineCode",{parentName:"li"},"channelKeys"),".")),Object(o.b)("h2",{id:"response"},"Response"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"}," Without expand=objects ")),"\n204 - No Content"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"}," With expand=objects ")),"\n200 - ok"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"results"),": JSON array that contains detailed information about the objects. results","[0]"," corresponds to the first status change request you passed in, results","[1]"," to the second one etc.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},'{\n  results: [\n    {\n      "A-3": {\n        "label": "A-3",\n        ...\n      },\n      "A-5": {\n        "label": "A-5",\n        ...\n      }\n    },\n    {\n      "B-27": {\n        "label": "B-27",\n        ...\n      }\n    }\n  ]\n}\n')))}p.isMDXComponent=!0},364:function(e,t,n){"use strict";function a(e){var t,n,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(s&&(s+=" "),s+=n);else for(t in e)e[t]&&(s&&(s+=" "),s+=t);return s}t.a=function(){for(var e,t,n=0,s="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(s&&(s+=" "),s+=t);return s}},365:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var a=n(0),s=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=s.a.createContext({}),b=function(e){var t=s.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=b(e.components);return s.a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},d=s.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=b(n),d=a,h=u["".concat(r,".").concat(d)]||u[d]||p[d]||o;return n?s.a.createElement(h,c(c({ref:t},i),{},{components:n})):s.a.createElement(h,c({ref:t},i))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var i=2;i<o;i++)r[i]=n[i];return s.a.createElement.apply(null,r)}return s.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},366:function(e,t,n){"use strict";var a=n(0),s=n(367);t.a=function(){var e=Object(a.useContext)(s.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},367:function(e,t,n){"use strict";var a=n(0),s=Object(a.createContext)(void 0);t.a=s},368:function(e,t,n){"use strict";var a=n(0),s=n.n(a),o=n(366),r=n(364),c=n(54),l=n.n(c),i=37,b=39;t.a=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,u=e.values,p=e.groupId,d=e.className,h=Object(o.a)(),v=h.tabGroupChoices,m=h.setTabGroupChoices,j=Object(a.useState)(c),g=j[0],O=j[1],f=a.Children.toArray(e.children);if(null!=p){var y=v[p];null!=y&&y!==g&&u.some((function(e){return e.value===y}))&&O(y)}var w=function(e){O(e),null!=p&&m(p,e)},N=[];return s.a.createElement("div",null,s.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":n},d)},u.map((function(e){var t=e.value,n=e.label;return s.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(r.a)("tabs__item",l.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case b:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case i:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(N,e.target,e)},onFocus:function(){return w(t)},onClick:function(){w(t)}},n)}))),t?Object(a.cloneElement)(f.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):s.a.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))}},369:function(e,t,n){"use strict";var a=n(0),s=n.n(a);t.a=function(e){var t=e.children,n=e.hidden,a=e.className;return s.a.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}}}]);